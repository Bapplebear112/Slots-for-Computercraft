-------------------
-- SETTINGS
-------------------
local monitorSide = "top"
local speakerSide = "left"
local dropperSide = "back"
local buttonSide = "right"

local bgColor = colors.blue
local symbolBgColor = colors.black
local textColor = colors.white

local spinDelay = 0.1
local messageTime = 3
local maxJackpot = 128
local jackpotBase = 10

local debugMode = false

-- SYMBOLS AND PAYOUTS
-- symbol = {threeMatch = X, twoMatch = Y}
-- If twoMatch = 0 or nil, no pity reward for that symbol
local symbols = {
  I = {threeMatch = 5, twoMatch = 0},   -- Iron
  B = {threeMatch = 4, twoMatch = 0},   -- Blaze
  E = {threeMatch = 3, twoMatch = 0},   -- Emerald
  N = {threeMatch = 10, twoMatch = 1},  -- Netherite
  D = {threeMatch = 6, twoMatch = 0},   -- Diamond
  G = {threeMatch = 2, twoMatch = 0},   -- Gold
}

-------------------
-- INIT
-------------------
local monitor = peripheral.wrap(monitorSide)
local speaker = peripheral.wrap(speakerSide)
redstone.setOutput(dropperSide, false)

monitor.setTextScale(1)
monitor.setBackgroundColor(bgColor)
monitor.setTextColor(textColor)
monitor.clear()

local jackpot = 0
local spinning = false
local lastMessageTime = 0
local lastMessage = ""

local symbolList = {}
for sym,_ in pairs(symbols) do
    table.insert(symbolList, sym)
end

-------------------
-- FUNCTIONS
-------------------
local function centerWrite(y, text, color)
  local w, _ = monitor.getSize()
  monitor.setCursorPos(math.floor((w - #text) / 2) + 1, y)
  monitor.setTextColor(color or textColor)
  monitor.write(text)
end

local function drawSlots(result)
  local w, h = monitor.getSize()
  local row = math.floor(h / 2)

  for i, sym in ipairs(result) do
    local col = math.floor(w/2 - 2 + i)
    monitor.setCursorPos(col, row)
    monitor.setBackgroundColor(symbolBgColor)
    monitor.write(sym)
    monitor.setBackgroundColor(bgColor)
  end
end

local function drawJackpot()
  local w, h = monitor.getSize()
  monitor.setCursorPos(2, h)
  monitor.setTextColor(colors.yellow)
  monitor.write("Jackpot: " .. jackpot)
  monitor.setTextColor(textColor)
end

local function spinSlots()
  local result = {}
  for i = 1, 3 do
      result[i] = symbolList[math.random(1, #symbolList)]
  end

  for _ = 1, 8 do
      local temp = {}
      for i = 1, 3 do
          temp[i] = symbolList[math.random(1, #symbolList)]
      end
      monitor.clear()
      drawSlots(temp)
      drawJackpot()
      sleep(spinDelay)
  end

  monitor.clear()
  drawSlots(result)
  drawJackpot()
  return result
end

local function payout(amount)
  if amount <= 0 then return end
  redstone.setOutput(dropperSide, true)
  sleep(amount * 0.2)
  redstone.setOutput(dropperSide, false)
end

local function checkWin(result)
  local counts = {}
  for _, sym in ipairs(result) do
      counts[sym] = (counts[sym] or 0) + 1
  end

  -- Jackpot special: 3 N
  if counts["N"] == 3 then
      local reward = jackpotBase + jackpot
      jackpot = 0
      return "JACKPOT!", reward, colors.green
  end

  for sym, count in pairs(counts) do
      if count == 3 then
          return "WIN!", symbols[sym].threeMatch, colors.lime
      elseif count == 2 and symbols[sym].twoMatch and symbols[sym].twoMatch > 0 then
          return "PITY!", symbols[sym].twoMatch, colors.cyan
      end
  end

  return "LOSE", 0, colors.red
end

local function showMessage(text, color)
  local w, h = monitor.getSize()
  centerWrite(h, text, color)
  lastMessage = text
  lastMessageTime = os.clock()
end

-------------------
-- MAIN LOOP
-------------------
while true do
  os.pullEvent("redstone") -- wait for spin input

  if redstone.getInput(buttonSide) and not spinning then
      spinning = true
      jackpot = math.min(jackpot + 1, maxJackpot)

      local result = spinSlots()
      local message, reward, color = checkWin(result)

      payout(reward)
      showMessage(message, color)

      spinning = false
  end

  -- Clear old message after messageTime
  if lastMessage ~= "" and os.clock() - lastMessageTime > messageTime then
      local w, h = monitor.getSize()
      monitor.setCursorPos(1, h)
      monitor.clearLine()
      lastMessage = ""
  end
end
