-------------------------
-- SLOT MACHINE SETTINGS
-------------------------
local SYMBOLS = {"I", "B", "E", "D", "G", "N"} -- slot symbols
local SPIN_TIME = 1.5
local JACKPOT_CAP = 128

-- payout table for triple matches
local PAYOUTS = {
    I = 2,
    B = 3,
    E = 4,
    D = 5,
    G = 6,
}

-- pity payouts (disabled unless you add a number)
-- Only N is enabled by default
local PITY_PAYOUTS = {
    I = 0, -- disabled
    B = 0, -- disabled
    E = 0, -- disabled
    D = 0, -- disabled
    G = 0, -- disabled
    N = 1, -- pity reward enabled (1 emerald)
}

local DEBUG = false

-------------------------
-- PERIPHERALS
-------------------------
local monitor = peripheral.wrap("right")
local speaker = peripheral.wrap("top")
local dropper = peripheral.wrap("back")

if not monitor then error("No monitor on right") end
if not speaker then error("No speaker on top") end
if not dropper then error("No dropper on back") end

monitor.setBackgroundColor(colors.black)
monitor.clear()
if monitor.setTextScale then monitor.setTextScale(1) end

-------------------------
-- STATE VARIABLES
-------------------------
local jackpotCounter = 10
local spinning = false
local resultText = nil
local resultColor = nil

-------------------------
-- HELPER FUNCTIONS
-------------------------
local function drawCentered(y, text, color, bg)
    local w, _ = monitor.getSize()
    local x = math.floor((w - #text) / 2) + 1
    monitor.setCursorPos(x, y)
    monitor.setTextColor(color or colors.white)
    monitor.setBackgroundColor(bg or colors.black)
    monitor.write(text)
end

local function playSound(name, pitch)
    speaker.playSound(name, 1, pitch)
end

local function dispense(count)
    for i = 1, count do
        dropper.drop(1)
        sleep(0.1)
    end
end

-------------------------
-- PAYOUT LOGIC
-------------------------
local function handleJackpot()
    resultText = "JACKPOT!"
    resultColor = colors.green
    dispense(jackpotCounter)
    jackpotCounter = 10
    playSound("entity.player.levelup", 1.2)
end

local function handleTriple(symbol)
    local payout = PAYOUTS[symbol] or 1
    resultText = "WIN +" .. payout
    resultColor = colors.green
    dispense(payout)
    jackpotCounter = math.min(jackpotCounter + 1, JACKPOT_CAP)
    playSound("entity.player.levelup", 1)
end

local function handlePity(symbol)
    local payout = PITY_PAYOUTS[symbol]
    if payout and payout > 0 then
        resultText = "PITY +" .. payout
        resultColor = colors.orange
        dispense(payout)
        jackpotCounter = math.min(jackpotCounter + 1, JACKPOT_CAP)
        playSound("block.note_block.bell", 1.2)
    else
        handleLose()
    end
end

local function handleLose()
    resultText = "LOSE"
    resultColor = colors.red
    jackpotCounter = math.min(jackpotCounter + 1, JACKPOT_CAP)
    playSound("block.note_block.bass", 0.8)
end

-------------------------
-- SPIN LOGIC
-------------------------
local function spin()
    spinning = true
    resultText, resultColor = nil, nil
    monitor.clear()

    local chosen = {}
    local _, h = monitor.getSize()
    local startRow = math.floor(h / 2) - 1

    -- Animate reels
    local startTime = os.clock()
    while os.clock() - startTime < SPIN_TIME do
        monitor.clear()
        for c = 1, 3 do
            local symbol = SYMBOLS[math.random(#SYMBOLS)]
            drawCentered(startRow + c - 1, symbol, colors.yellow)
        end
        playSound("block.note_block.hat", 1)
        sleep(0.2)
    end

    -- Final symbols
    for c = 1, 3 do
        chosen[c] = SYMBOLS[math.random(#SYMBOLS)]
        drawCentered(startRow + c - 1, chosen[c], colors.yellow)
    end

    -- Evaluate result
    if chosen[1] == chosen[2] and chosen[2] == chosen[3] then
        if chosen[1] == "N" then
            handleJackpot()
        else
            handleTriple(chosen[1])
        end
    elseif chosen[1] == chosen[2] or chosen[2] == chosen[3] or chosen[1] == chosen[3] then
        handlePity(chosen[1]) -- only gives pity if PITY_PAYOUTS[symbol] > 0
    else
        handleLose()
    end

    -- Show result text
    drawCentered(startRow + 3, resultText, resultColor)
    spinning = false
end

-------------------------
-- MAIN LOOP
-------------------------
while true do
    monitor.clear()
    local w, h = monitor.getSize()

    monitor.setCursorPos(w - 12, 1)
    monitor.setTextColor(colors.white)
    monitor.write("Jackpot: " .. jackpotCounter)

    if resultText then
        drawCentered(h - 1, resultText, resultColor)
    else
        drawCentered(h - 1, "Press Button", colors.white)
    end

    os.pullEvent("redstone")
    if redstone.getInput("bottom") and not spinning then
        spin()
    end
end
