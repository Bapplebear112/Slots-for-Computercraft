-- Slot machine for CC:Tweaked

-- ===============================
-- SETTINGS
-- ===============================
local monitorSide = "right"
local dropperSide = "back"
local speakerSide = "top"
local spinInputSide = "left"     -- redstone input to trigger spin
local spinOutputSide = "bottom"  -- redstone spinning indicator

local frameColor = colors.blue
local symbolBgColor = colors.gray
local jackpotCounterColor = colors.yellow

local symbols = {  -- letters used as symbols
    {name="G", color=colors.yellow},
    {name="D", color=colors.lightBlue},
    {name="I", color=colors.lightGray},
    {name="B", color=colors.orange},
    {name="E", color=colors.green},
    {name="N", color=colors.black} -- Jackpot
}

local spinTime = {1.0,1.6,2.2}
local spinSpeed = 0.1

local baseJackpot = 10
local jackpotCap = 128   -- maximum jackpot amount
local jackpotCounter = 0

local debugMode = false -- true to enable full debug mode
local debugReels = {1,1,1} -- select indices of symbols for debug [reel1, reel2, reel3]

-- Flash settings
local flashCount = 6      -- number of flashes for bottom text
local flashSpeed = 0.25   -- seconds per flash
-- ===============================

-- Peripheral setup
local mon = peripheral.wrap(monitorSide)
local spk = peripheral.wrap(speakerSide)
mon.setTextScale(0.5)
mon.clear()
local width, height = mon.getSize()

-- Helpers
local function note(p)
    if spk then spk.playNote("harp",3,p) end
end

local function displayJackpot()
    local text = "J:"..(baseJackpot+jackpotCounter)
    mon.setCursorPos(width-#text+1,1)
    mon.setBackgroundColor(frameColor)
    mon.setTextColor(jackpotCounterColor)
    mon.write(text)
end

local function drawReels(reels)
    local startCol = math.floor((width-3)/2)+1
    local startRow = math.floor((height-3)/2)+1
    for col=1,3 do
        for row=1,3 do
            local idx = ((reels[col] + row - 2 -1) % #symbols)+1
            local sym = symbols[idx]
            mon.setCursorPos(startCol + col -1, startRow + row -1)
            mon.setBackgroundColor(symbolBgColor)
            mon.setTextColor(sym.color)
            mon.write(sym.name)
        end
    end
end

local function spin()
    local reels = {}
    for i=1,3 do
        if debugMode then
            reels[i] = debugReels[i]
        else
            reels[i] = math.random(#symbols)
        end
    end

    local offsets = {0,0,0}
    local stopTimes = {os.clock()+spinTime[1], os.clock()+spinTime[2], os.clock()+spinTime[3]}
    redstone.setOutput(spinOutputSide,true)
    while true do
        local done = true
        for i=1,3 do
            if os.clock()<stopTimes[i] then
                offsets[i] = (offsets[i]+1)%#symbols
                done = false
            end
        end
        local displayReels={}
        for i=1,3 do displayReels[i]=(reels[i]+offsets[i])%#symbols+1 end
        drawReels(displayReels)
        note(math.random(10,20))
        sleep(spinSpeed)
        if done then break end
    end
    redstone.setOutput(spinOutputSide,false)
    local final={}
    for i=1,3 do final[i]=(reels[i]+offsets[i])%#symbols+1 end
    drawReels(final)
    return final
end

local function checkWin(reels)
    local s1,s2,s3 = symbols[reels[1]].name, symbols[reels[2]].name, symbols[reels[3]].name
    if s1=="N" and s2=="N" and s3=="N" then return "jackpot"
    elseif s1==s2 and s2==s3 then return "win"
    else return "lose"
    end
end

local function dispenseItems(jackpot)
    redstone.setOutput(dropperSide,true) sleep(0.3) redstone.setOutput(dropperSide,false)
    if jackpot then
        for i=1,2 do sleep(0.3) redstone.setOutput(dropperSide,true) sleep(0.3) redstone.setOutput(dropperSide,false) end
    end
end

local function playJingle(result)
    if not spk then return end
    if result=="jackpot" then for i=12,20,2 do note(i) sleep(0.1) end
    elseif result=="win" then note(12) sleep(0.1) note(16) sleep(0.1) note(20)
    elseif result=="lose" then note(20) sleep(0.2) note(16) sleep(0.2) note(12) end
end

-- Flash the bottom text instead of center symbol
local function flashResultText(text,result)
    local y = height
    local x = math.floor((width-#text)/2)+1
    local color
    if result=="jackpot" then color=colors.lime
    elseif result=="win" then color=colors.green
    else color=colors.red end
    for i=1,flashCount do
        mon.setCursorPos(x,y)
        mon.setBackgroundColor(frameColor)
        mon.setTextColor(color)
        mon.write(text)
        sleep(flashSpeed)
        mon.setCursorPos(x,y)
        mon.setBackgroundColor(frameColor)
        mon.setTextColor(colors.white)
        mon.write(text)
        sleep(flashSpeed)
    end
end

local function calculatePayout(result)
    if result=="jackpot" then return baseJackpot+jackpotCounter
    elseif result=="win" then return math.floor((baseJackpot+jackpotCounter)/2)
    else return 0 end
end

local function displayResultText(text,color)
    local y = height
    local x = math.floor((width-#text)/2)+1
    mon.setCursorPos(x,y)
    mon.setTextColor(color)
    mon.setBackgroundColor(frameColor)
    mon.write(text)
end

-- Initial setup
mon.setBackgroundColor(frameColor)
mon.clear()
displayJackpot()

-- Main loop
local previousResultVisible = false
local lastRedstoneInput = false

while true do
    local currentInput = redstone.getInput(spinInputSide)
    if currentInput and not lastRedstoneInput then
        -- Rising edge detected, trigger spin
        if previousResultVisible then
            displayResultText("      ", colors.white)
            previousResultVisible = false
        end

        -- Increment jackpot (capped)
        jackpotCounter = math.min(jackpotCounter + 1, jackpotCap - baseJackpot)
        displayJackpot()

        -- Spin reels
        local reels = spin()
        local result = checkWin(reels)
        local payout = calculatePayout(result)

        -- Debug output
        if debugMode then
            print("Result: "..result.." | Payout: "..payout)
            print("Reels positions: "..reels[1]..","..reels[2]..","..reels[3])
        end

        -- Dispense items
        if result=="jackpot" then
            dispenseItems(true)
            jackpotCounter = 0
        elseif result=="win" then
            dispenseItems(false)
        end

        -- Flash bottom text
        if result=="jackpot" then
            flashResultText("JACKPOT!", result)
        elseif result=="win" then
            flashResultText("WIN!", result)
        else
            flashResultText("LOSE!", result)
        end
        previousResultVisible = true

        playJingle(result)
        displayJackpot()

        -- Auto-clear bottom text after 3s
        local resultTimer = os.startTimer(3)
        local cleared = false
        while not cleared do
            local event,id = os.pullEvent()
            if event=="timer" and id==resultTimer then
                displayResultText("      ", colors.white)
                previousResultVisible = false
                cleared = true
            end
        end
    end
    lastRedstoneInput = currentInput
    sleep(0.05)
end
