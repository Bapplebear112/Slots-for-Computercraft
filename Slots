-- slotmachine_small_monitor.lua
-- Slot machine for tiny monitors: symbols persistent, results via flash and sound

-- ===============================
-- SETTINGS
-- ===============================

local monitorSide = "right"
local dropperSide = "back"
local speakerSide = "top"
local spinInputSide = "left"   -- redstone input side to trigger a spin
local spinOutputSide = "bottom" -- redstone output side for spinning indicator

-- Colors
local frameColor = colors.blue
local slotWindowBgColor = colors.gray
local symbolBgColor = colors.gray
local jackpotCounterColor = colors.yellow

-- Symbols (letters only, text color)
local symbols = {
    {name="G", color=colors.yellow},
    {name="D", color=colors.lightBlue},
    {name="I", color=colors.lightGray},
    {name="B", color=colors.orange},
    {name="E", color=colors.green},
    {name="N", color=colors.black} -- Jackpot
}

-- Spin animation settings
local spinTime = {1.0, 1.6, 2.2}
local spinSpeed = 0.1

-- Jackpot settings
local baseJackpot = 10
local jackpotCounter = 0

-- Player money variable (internal)
local playerMoney = 100  -- starting money

-- ===============================
-- END SETTINGS
-- ===============================

-- Peripheral setup
local mon = peripheral.wrap(monitorSide)
local spk = peripheral.wrap(speakerSide)
mon.setTextScale(0.5)
mon.clear()
local width, height = mon.getSize()

-- Helper functions
local function note(p)
    if spk then spk.playNote("harp",3,p) end
end

local function drawReels(reels)
    local startCol = 1
    for col=1,3 do
        for row=1,3 do
            local idx = ((reels[col] + row - 2 -1) % #symbols) + 1
            local sym = symbols[idx]
            mon.setCursorPos(col, row)
            mon.setBackgroundColor(symbolBgColor)
            mon.setTextColor(sym.color)
            mon.write(sym.name)
        end
    end
end

local function displayJackpot()
    local text = "J:" .. (baseJackpot + jackpotCounter)
    mon.setCursorPos(width - #text + 1, 1)
    mon.setBackgroundColor(frameColor)
    mon.setTextColor(jackpotCounterColor)
    mon.write(text)
end

local function spin()
    local reels = {math.random(#symbols), math.random(#symbols), math.random(#symbols)}
    local offsets = {0,0,0}
    local stopTimes = {os.clock()+spinTime[1], os.clock()+spinTime[2], os.clock()+spinTime[3]}

    -- Turn on spinning indicator
    redstone.setOutput(spinOutputSide,true)

    while true do
        local done = true
        for i=1,3 do
            if os.clock()<stopTimes[i] then
                offsets[i] = (offsets[i]+1)%#symbols
                done = false
            end
        end
        local displayReels = {}
        for i=1,3 do displayReels[i] = (reels[i] + offsets[i]) % #symbols + 1 end
        drawReels(displayReels)
        note(math.random(10,20))
        sleep(spinSpeed)
        if done then break end
    end

    -- Turn off spinning indicator
    redstone.setOutput(spinOutputSide,false)

    local final = {}
    for i=1,3 do final[i] = (reels[i] + offsets[i]) % #symbols + 1 end
    drawReels(final) -- keep final reels visible
    return final
end

local function checkWin(reels)
    local s1,s2,s3 = symbols[reels[1]].name, symbols[reels[2]].name, symbols[reels[3]].name
    if s1=="N" and s2=="N" and s3=="N" then return "jackpot"
    elseif s1==s2 and s2==s3 then return "win"
    else return "lose"
    end
end

local function dispenseMoney(amount)
    if amount>0 then
        print("Dispensed "..amount.." money!")
        playerMoney = playerMoney + amount
    end
end

local function dispenseItems(jackpot)
    redstone.setOutput(dropperSide,true) sleep(0.3) redstone.setOutput(dropperSide,false)
    if jackpot then
        for i=1,2 do sleep(0.3) redstone.setOutput(dropperSide,true) sleep(0.3) redstone.setOutput(dropperSide,false) end
    end
end

local function playJingle(result)
    if not spk then return end
    if result=="jackpot" then for i=12,20,2 do note(i) sleep(0.1) end
    elseif result=="win" then note(12) sleep(0.1) note(16) sleep(0.1) note(20)
    elseif result=="lose" then note(20) sleep(0.2) note(16) sleep(0.2) note(12) end
end

-- Flash center symbol for result
local function flashResult(result)
    local centerX, centerY = 2,2
    local sym = symbols[math.random(#symbols)]
    local color
    if result=="jackpot" then color = colors.lime
    elseif result=="win" then color = colors.green
    else color = colors.red end

    for i=1,6 do
        mon.setCursorPos(centerX, centerY)
        mon.setBackgroundColor(color)
        mon.setTextColor(colors.white)
        mon.write(symbols[sym].name)
        sleep(0.25)
        mon.setCursorPos(centerX, centerY)
        mon.setBackgroundColor(symbolBgColor)
        mon.setTextColor(symbols[sym].color)
        mon.write(symbols[sym].name)
        sleep(0.25)
    end
end

local function calculatePayout(result)
    if result=="jackpot" then return baseJackpot+jackpotCounter
    elseif result=="win" then return math.floor((baseJackpot+jackpotCounter)/2)
    else return 0 end
end

-- Initial setup
mon.setBackgroundColor(frameColor)
mon.clear()
displayJackpot()

-- Main loop
while true do
    -- Wait for redstone input
    repeat
        os.pullEvent("redstone")
    until redstone.getInput(spinInputSide)

    playerMoney = playerMoney - 1
    jackpotCounter = jackpotCounter + 1
    displayJackpot()

    local reels = spin()
    local result = checkWin(reels)
    local payout = calculatePayout(result)

    if result=="jackpot" then
        dispenseMoney(payout)
        dispenseItems(true)
        jackpotCounter = 0
    elseif result=="win" then
        dispenseMoney(payout)
        dispenseItems(false)
    end

    playJingle(result)
    flashResult(result)
    displayJackpot()

    -- Wait until redstone input goes low before next spin
    while redstone.getInput(spinInputSide) do
        os.pullEvent("redstone")
    end
end
