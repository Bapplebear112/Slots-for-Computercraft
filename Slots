-------------------
-- SETTINGS
-------------------
local spinCost = 1
local baseJackpot = 10
local maxJackpot = 128

-- Payouts (excluding jackpot)
local payouts = {
    win3N = 5,    -- 3 Netherite
    win3D = 4,    -- 3 Diamonds
    win3E = 3,    -- 3 Emeralds
    win3G = 2,    -- 3 Gold
    pity2N = 1    -- 2 Netherite = pity token
}

-- Display settings
local bgColor = colors.blue
local symbolBg = colors.black
local textColor = colors.white
local jackpotColor = colors.yellow
local loseColor = colors.red
local winColor = colors.green
local debugMode = false

-- Hardware sides
local monitorSide = "top"
local speakerSide = "right"
local dropperSide = "bottom"
local buttonSide = "left"

-------------------
-- INIT
-------------------
local monitor = peripheral.wrap(monitorSide)
local speaker = peripheral.wrap(speakerSide)
redstone.setOutput(dropperSide, false)
monitor.setTextScale(1)
monitor.setBackgroundColor(bgColor)
monitor.setTextColor(textColor)
monitor.clear()

local jackpotCounter = 0

-------------------
-- SYMBOLS
-------------------
local symbols = {"N", "D", "E", "G"} -- Netherite, Diamond, Emerald, Gold

-------------------
-- FUNCTIONS
-------------------
local function centerText(y, text, color)
    local w, h = monitor.getSize()
    local x = math.floor((w - #text) / 2) + 1
    monitor.setCursorPos(x, y)
    monitor.setTextColor(color or textColor)
    monitor.write(text)
end

local function displayJackpot()
    local w, h = monitor.getSize()
    monitor.setCursorPos(1, h)
    monitor.setTextColor(jackpotColor)
    monitor.clearLine()
    centerText(h, "Jackpot: " .. jackpotCounter)
end

local function spinReels()
    local reels = {}
    for i = 1, 3 do
        reels[i] = symbols[math.random(1, #symbols)]
    end
    return reels
end

local function displayReels(reels)
    local w, h = monitor.getSize()
    local y = math.floor(h / 2)

    monitor.setBackgroundColor(symbolBg)
    monitor.clear()

    local line = table.concat(reels, " ")
    centerText(y, line, textColor)

    monitor.setBackgroundColor(bgColor)
    displayJackpot()
end

local function checkWin(reels)
    if reels[1] == reels[2] and reels[2] == reels[3] then
        if reels[1] == "N" then return "jackpot"
        elseif reels[1] == "D" then return "3D"
        elseif reels[1] == "E" then return "3E"
        elseif reels[1] == "G" then return "3G"
        end
    elseif reels[1] == "N" and reels[2] == "N" then
        return "pity2N"
    elseif reels[2] == "N" and reels[3] == "N" then
        return "pity2N"
    elseif reels[1] == "N" and reels[3] == "N" then
        return "pity2N"
    end
    return "lose"
end

local function calculatePayout(result)
    if result == "jackpot" then
        return baseJackpot + jackpotCounter
    elseif result == "3D" then
        return payouts.win3D
    elseif result == "3E" then
        return payouts.win3E
    elseif result == "3G" then
        return payouts.win3G
    elseif result == "pity2N" then
        return payouts.pity2N
    elseif result == "win" then
        return payouts.win3N
    end
    return 0
end

local function dispenseItems(amount)
    if amount <= 0 then return end
    for i = 1, amount do
        redstone.setOutput(dropperSide, true)
        sleep(0.2)
        redstone.setOutput(dropperSide, false)
        sleep(0.2)
    end
end

local function playSound(result)
    if result == "jackpot" then
        speaker.playSound("entity.player.levelup", 1)
    elseif result == "lose" then
        speaker.playSound("entity.villager.no", 1)
    else
        speaker.playSound("entity.experience_orb.pickup", 1)
    end
end

local function flashMessage(msg, color)
    local w, h = monitor.getSize()
    for i = 1, 3 do
        centerText(h - 1, msg, color)
        sleep(0.3)
        centerText(h - 1, string.rep(" ", #msg), color)
        sleep(0.3)
    end
    centerText(h - 1, msg, color)
    sleep(3)
    centerText(h - 1, string.rep(" ", #msg), textColor)
end

-------------------
-- MAIN LOOP
-------------------
while true do
    os.pullEvent("redstone")

    if redstone.getInput(buttonSide) then
        -- Add to jackpot
        jackpotCounter = math.min(jackpotCounter + 1, maxJackpot)

        -- Spin
        redstone.setOutput(dropperSide, true) -- spinning signal
        local reels = spinReels()
        displayReels(reels)
        sleep(1.5)
        redstone.setOutput(dropperSide, false)

        -- Evaluate
        local result = checkWin(reels)
        local payout = calculatePayout(result)

        if debugMode then
            print("Result:", result, "Payout:", payout)
        end

        if result == "jackpot" then
            dispenseItems(payout)
            flashMessage("JACKPOT! +" .. payout, jackpotColor)
            jackpotCounter = 0
        elseif result == "lose" then
            flashMessage("LOSE", loseColor)
        else
            dispenseItems(payout)
            flashMessage("WIN +" .. payout, winColor)
        end

        displayJackpot()
        playSound(result)
    end
end
