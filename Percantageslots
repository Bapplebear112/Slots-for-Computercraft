--========================--
--    SLOT MACHINE LUA    --
--========================--

--== SETTINGS ==--
local baseJackpot   = 10
local maxJackpot    = 128
local debugMode     = false

-- pity enabled for N (jackpot symbol)
local symbolPity = {
    N = true
}

-- payouts (3 in a row, except jackpot)
local payouts = {
    I = 3,
    B = 5,
    E = 8,
    D = 10,
    G = 15,
    -- N = jackpot, handled separately
}

-- symbols (N is jackpot symbol)
local symbols = {
    { name="I", color=colors.red,    weight=10 },
    { name="B", color=colors.blue,   weight=10 },
    { name="E", color=colors.green,  weight=10 },
    { name="D", color=colors.orange, weight=10 },
    { name="G", color=colors.yellow, weight=10 },
    { name="N", color=colors.purple, weight=2  } -- Jackpot
}

--== PERIPHERALS ==--
local monitor = peripheral.wrap("right")
local speaker = peripheral.wrap("top")
local button  = "left"
local dropper = "bottom"

--== VARIABLES ==--
local jackpotCounter = baseJackpot

--== FUNCTIONS ==--

-- pick symbol by weight
local function pickSymbol()
    local total = 0
    for _,sym in ipairs(symbols) do
        total = total + sym.weight
    end
    local rnd = math.random(total)
    local cumulative = 0
    for _,sym in ipairs(symbols) do
        cumulative = cumulative + sym.weight
        if rnd <= cumulative then
            return sym
        end
    end
end

-- spin reels into 3x3 grid
local function spinReels()
    local grid = {}
    for row=1,3 do
        grid[row] = {}
        for col=1,3 do
            grid[row][col] = pickSymbol()
        end
    end
    return grid
end

-- draw reels grid
local function drawGrid(grid)
    monitor.setBackgroundColor(colors.lightBlue)
    monitor.clear()
    local w,h = monitor.getSize()
    local startY = 3
    for row=1,3 do
        local line = ""
        for col=1,3 do
            line = line .. grid[row][col].name .. " "
        end
        local x = math.floor((w - #line)/2)
        monitor.setCursorPos(x, startY + row - 1)
        monitor.setTextColor(colors.white)
        monitor.write(line)
    end
end

-- draw jackpot counter (always J:##)
local function drawJackpot()
    monitor.setCursorPos(2,1)
    monitor.setTextColor(colors.white)
    monitor.write("J:"..tostring(jackpotCounter))
end

-- flash win/lose text
local function flashText(text, color)
    local w,h = monitor.getSize()
    local x = math.floor((w - #text)/2)
    local y = h
    for i=1,3 do
        monitor.setCursorPos(x,y)
        monitor.setTextColor(color)
        monitor.write(text)
        sleep(0.3)
        monitor.setCursorPos(x,y)
        monitor.setBackgroundColor(colors.lightBlue)
        monitor.write(string.rep(" ",#text))
        sleep(0.3)
    end
end

-- evaluate middle row
local function checkWin(grid)
    local middleRow = grid[2]
    local s1,s2,s3 = middleRow[1].name, middleRow[2].name, middleRow[3].name

    -- jackpot (three N's)
    if s1=="N" and s2=="N" and s3=="N" then
        local payout = jackpotCounter
        jackpotCounter = baseJackpot
        redstone.setOutput(dropper,true)
        sleep(payout*0.2)
        redstone.setOutput(dropper,false)
        flashText("JACKPOT!",colors.yellow)
        return
    end

    -- three of a kind
    if s1==s2 and s2==s3 then
        local payout = payouts[s1] or 0
        for i=1,payout do
            redstone.setOutput(dropper,true)
            sleep(0.2)
            redstone.setOutput(dropper,false)
        end
        jackpotCounter = math.min(jackpotCounter+1,maxJackpot)
        flashText("WIN!",colors.green)
        return
    end

    -- pity (two of a kind + pity enabled)
    if (s1==s2 or s2==s3 or s1==s3) and symbolPity[s1] then
        redstone.setOutput(dropper,true)
        sleep(0.2)
        redstone.setOutput(dropper,false)
        jackpotCounter = math.min(jackpotCounter+1,maxJackpot)
        flashText("PITY!",colors.orange)
        return
    end

    -- lose
    jackpotCounter = math.min(jackpotCounter+1,maxJackpot)
    flashText("LOSE!",colors.red)
end

--== MAIN LOOP ==--
monitor.setBackgroundColor(colors.lightBlue)
monitor.clear()

while true do
    local event, side = os.pullEvent("redstone")
    if side==button and redstone.getInput(button) then
        local grid = spinReels()
        drawGrid(grid)
        drawJackpot()
        checkWin(grid)
    end
end
